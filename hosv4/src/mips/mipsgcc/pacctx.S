#include "mipsregs.h"

#define SF_SIZE (4*72)        
/* ------------------------------------------------------------------------ */
/*  Hyper Operating System V4  μITRON4.0仕様 Real-Time OS                  */
/*    プロセッサ抽象化コンポーネント (MIPS4互換コア用)                      */
/*                                                                          */
/*                                  Copyright (C) 1998-2002 by Project HOS  */
/*                                  http://sourceforge.jp/projects/hos/     */
/* ------------------------------------------------------------------------ */
                .global hospac_dis_int         /* 割り込み禁止 */
                .global hospac_ena_int         /* 割り込み許可 */
                .global hospac_cre_ctx_asm     /* 実行コンテキストの作成 */
                .global hospac_swi_ctx         /* 実行コンテキストの切替 */

/************************************************
  割り込み禁止
  void hospac_dis_int(void)
************************************************/
/* ステータス・レジスタのIEビットを0にする */
                .text
                .align  2
hospac_dis_int:
                mfc0    t0, CP0_STATUS          /* CP0レジスタをロード */
                la      t1, 0xfffffffe          /* IE=0 */
                and     t0, t0, t1
                mtc0    t0, CP0_STATUS          /* CP0レジスタをストア */
                jr      ra
                nop

/************************************************
  割り込み許可
  void hospac_ena_int(void)
************************************************/
/* ステータス・レジスタのIEビットを1にする */
                .text
                .align  2
hospac_ena_int:
                mfc0    t0, CP0_STATUS          /* CP0レジスタをロード */
                la      t1, 0x00000001          /* IE=1 */
                or      t0, t0, t1
                mtc0    t0, CP0_STATUS          /* CP0レジスタをストア */
                jr      ra
                nop

/************************************************
  実行コンテキストエントリーアドレス
************************************************/
                .text
                .align 2
ctx_entry:      
                j       a1                      /* 実行アドレスa1にジャンプ。a0が実行時パラメータ */
                nop

/************************************************
  実行コンテキストの作成
  void hospac_cre_ctx_asm(
         T_HOSPAC_CTXINF *pk_ctxinf,    作成するコンテキスト
         VP     sp,                     スタックポインタ
         void   (*task)(VP_INT),        実行アドレス
         VP_INT exinf)                  実行時パラメータ
************************************************/
                .text
                .align 2
hospac_cre_ctx_asm:
                move    k0, a1                  /* スタックポインタを退避 */
                subu    a1, a1, SF_SIZE         /* スタックの伸張（4*72=288バイト）*/
//                sw      a2, 4*5(a1)             /* 実行アドレスの格納 */
                sw      a3, 4*4(a1)             /* 実行パラメータの格納 */
                sw      k0, 4*29(a1)            /* スタックポインタの設定 */
#if 0        
                la      k0, ctx_entry           /* 実行エントリポイントをリターンアドレスに設定 */
                sw      k0, 4*31(a1)
#else
                sw      a2, 4*31(a1)
#endif
                mfc0    k0, CP0_STATUS          /* CP0_STATUSを退避 */
                sw      k0, 4*36(a1)
                
                sw      a1, (a0)                /* コンテキストのスタックポインタ保存 */
                jr      ra                      /* 呼び出し元へ帰る */
                nop

/************************************************
  実行コンテキストの切替
  void hospac_swi_ctx(
        T_HOSPAC_CTXINF *pk_pre_ctxinf, 現在のコンテキストの保存先
        T_HOSPAC_CTXINF *pk_nxt_ctxinf) 切り替えるコンテキスト
************************************************/
                .text
                .align 2
hospac_swi_ctx:
                move    k0, sp                  /* 伸張前のスタックポインタを退避 */
                subu    sp, sp, SF_SIZE         /* スタックを伸張 */
#if 0
                sw      $0, 4*0(sp)             /* zero を退避（必要なし）*/
                .set noat
                sw      $1, 4*1(sp)             /* at   を退避 */
#endif        
                sw      $2, 4*2(sp)             /* v0   を退避 */
                sw      $3, 4*3(sp)             /* v1   を退避 */
                sw      $4, 4*4(sp)             /* a0   を退避 */
                sw      $5, 4*5(sp)             /* a1   を退避 */
                sw      $6, 4*6(sp)             /* a2   を退避 */
                sw      $7, 4*7(sp)             /* a3   を退避 */
                sw      $8, 4*8(sp)             /* t0   を退避 */
                sw      $9, 4*9(sp)             /* t1   を退避 */
                sw      $10, 4*10(sp)           /* t2   を退避 */
                sw      $11, 4*11(sp)           /* t3   を退避 */
                sw      $12, 4*12(sp)           /* t4   を退避 */
                sw      $13, 4*13(sp)           /* t5   を退避 */
                sw      $14, 4*14(sp)           /* t6   を退避 */
                sw      $15, 4*15(sp)           /* t7   を退避 */
                sw      $16, 4*16(sp)           /* s0   を退避 */
                sw      $17, 4*17(sp)           /* s1   を退避 */
                sw      $18, 4*18(sp)           /* s2   を退避 */
                sw      $19, 4*19(sp)           /* s3   を退避 */
                sw      $20, 4*20(sp)           /* s4   を退避 */
                sw      $21, 4*21(sp)           /* s5   を退避 */
                sw      $22, 4*22(sp)           /* s6   を退避 */
                sw      $23, 4*23(sp)           /* s7   を退避 */
                sw      $24, 4*24(sp)           /* t8   を退避 */
                sw      $25, 4*25(sp)           /* t9   を退避 */
                sw      $26, 4*26(sp)           /* k0   を退避（必要なし？）*/
                sw      $27, 4*27(sp)           /* k1   を退避（必要なし？）*/
#if 0
                sw      $28, 4*28(sp)           /* gp   を退避（必要なし？）*/
#endif
                sw      k0,  4*29(sp)           /* sp   を退避（伸張前の値）*/
#if 1
                sw      $30, 4*30(sp)           /* fp   を退避（必要なし？）*/
#endif
                sw      $31, 4*31(sp)           /* ra   を退避 */

                sw      sp, (a0)                /* spを管理領域へ退避 */
                lw      sp, (a1)                /* 管理領域からspを復帰 */
                lw      $2, 4*2(sp)             /* v0   を復帰 */
                lw      $3, 4*3(sp)             /* v1   を復帰 */
                lw      $4, 4*4(sp)             /* a0   を復帰 */
                lw      $5, 4*5(sp)             /* a1   を復帰 */
                lw      $6, 4*6(sp)             /* a2   を復帰 */
                lw      $7, 4*7(sp)             /* a3   を復帰 */
                lw      $8, 4*8(sp)             /* t0   を復帰 */
                lw      $9, 4*9(sp)             /* t1   を復帰 */
                lw      $10, 4*10(sp)           /* t2   を復帰 */
                lw      $11, 4*11(sp)           /* t3   を復帰 */
                lw      $12, 4*12(sp)           /* t4   を復帰 */
                lw      $13, 4*13(sp)           /* t5   を復帰 */
                lw      $14, 4*14(sp)           /* t6   を復帰 */
                lw      $15, 4*15(sp)           /* t7   を復帰 */
                lw      $16, 4*16(sp)           /* s0   を復帰 */
                lw      $17, 4*17(sp)           /* s1   を復帰 */
                lw      $18, 4*18(sp)           /* s2   を復帰 */
                lw      $19, 4*19(sp)           /* s3   を復帰 */
                lw      $20, 4*20(sp)           /* s4   を復帰 */
                lw      $21, 4*21(sp)           /* s5   を復帰 */
                lw      $22, 4*22(sp)           /* s6   を復帰 */
                lw      $23, 4*23(sp)           /* s7   を復帰 */
                lw      $24, 4*24(sp)           /* t8   を復帰 */
                lw      $25, 4*25(sp)           /* t9   を復帰 */
                lw      $26, 4*26(sp)           /* k0   を復帰（必要なし？）*/
                lw      $27, 4*27(sp)           /* k1   を復帰（必要なし？）*/
#if 0
                lw      $28, 4*28(sp)           /* gp   を復帰（必要なし？）*/
#endif
                lw      $30, 4*30(sp)           /* fp   を復帰（必要なし？）*/
                lw      $31, 4*31(sp)           /* ra   を復帰 */

                lw      $29, 4*29(sp)           /* sp   を復帰 */
                jr      ra                      /* コンテキストへジャンプ */
                nop

/* ------------------------------------------------------------------------ */
/*  Copyright (C) 1998-2002 by Project HOS                                  */
/* ------------------------------------------------------------------------ */
